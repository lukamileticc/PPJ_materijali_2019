/* deklaracije */
/* navode se tokeni, startni neterminal, asocijativnost i prioritet operatora, deklarisanje tipa atributa simbola date gramatike*/
%{
/* C++ kod koji se direktno prepisuje na pocetak datoteke parser.tab.cpp */
/* zaglavlja koja su nam potrebna zbog leksickog analizatora i funkcije za obradu greske */

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>

#define YYDEBUG 1

using namespace std;


/* Leksicki analizator - lex ce nam ga izgraditi */
extern int yylex();
/* Funkcija koja ispisuje poruku o gresci i prekida program  */
void yyerror(string s) ;
%}

/* Deklarisemo BROJ kao token. Svi ostali sibmoli osim karakterskih bice smatrani neterminalima */
%token BROJ
/* Deklarisemo aksiomu (startni simbol) gramatike */
%start e

%%
/*pravila obuhvataju pravila KSG sa eventualno pridruzenim semantickim akcijama */
e : e '+' t 
	| t
	;
t : t '*' f
	| f
	;
f : '(' e ')'
	| BROJ
	; 
%%

/*funkcije ovde pisemo main() funkciju i yyerror() */

int main(){
	if(yyparse() == 0)
		cout <<"Uparen je aritmeticki izraz!" << endl;
	return 0;
}

void yyerror(string s) {
   cerr << s << endl;
   exit(EXIT_FAILURE);
 }

