%{

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <map>

using namespace std;

#include "polinom.hpp"

extern int yylex();

void yyerror(string s) {

	cerr<<"Sintaksna greska: "<<s<<endl;
	exit(EXIT_FAILURE);
}

map<string, Polinom*> promenljive;

void obrisi(void) {

	for (auto it = promenljive.begin(); it != promenljive.end(); it++){
	
		delete it->second;
	}
}

%}

%union {
 double x;
 string* ime;
 Polinom* p;
}

%nonassoc EQ NEQ
%left '+' '-'
%left '*'
%right UMINUS
%left '\''

%token DODELA EQ NEQ
%token<x> BROJ
%token<ime> ID

%type<p> izraz polinom lista

%start program

%%

program: naredba '\n' program	{}
	|							{}
	;
naredba: izraz			{
							cout<<(*$1)<<endl;
						}
	| ID DODELA izraz	{
							auto it = promenljive.find(*$1);
							if (it != promenljive.end())
								delete it->second;
								
							promenljive[*$1] = $3;
							delete $1;
						}
	| izraz EQ izraz	{
							if (*$1 == *$3) {
								cout<<"true"<<endl;
							}
							else {
								cout<<"false"<<endl;
							}
							delete $1;
							delete $3;
						}
	| izraz NEQ izraz	 {
							if (*$1 != *$3) {
								cout<<"true"<<endl;
							}
							else {
								cout<<"false"<<endl;
							}
							delete $1;
							delete $3;
						}
	| izraz '[' BROJ ']' {cout<<($1->valueAt($3))<<endl; delete $1;}
	;
izraz: izraz '+' izraz	{$$ = *$1 + *$3; delete $1; delete $3;} 
	| izraz '-' izraz	{$$ = *$1 - *$3; delete $1; delete $3;}
	| izraz '*' izraz	{$$ = *$1 * *$3; delete $1; delete $3;}
	| '-' izraz	%prec UMINUS {$$ = -(*$2); delete $2;}
	| '(' izraz ')'	{$$ = $2;}
	| izraz '\''	{$$ = $1->izvod(); delete $1;}
	| '$' izraz '|' BROJ	{$$ = $2->integral($4); delete $2;}
	| ID	{
				auto it = promenljive.find(*$1);
				if (it == promenljive.end())
					yyerror("Promenljiva nije definisana");
					
				$$ = new Polinom(*(it->second));
				delete $1;
			}
	| polinom	{$$ = $1;}
	;
polinom: '<' lista '>'	{$$ = $2;}
	;
lista: lista ',' BROJ	{$1->insert($3); $$ = $1;}
	| BROJ				{$$ = new Polinom(); $$->insert($1);}
	;

%%

int main() {

	if (yyparse() == 0) {
		
		cout<<"sve je ok"<<endl;
	}
	else {
		cout<<"sintaksna greska"<<endl;
	}
	
	obrisi();
	
	exit(EXIT_SUCCESS);
}
