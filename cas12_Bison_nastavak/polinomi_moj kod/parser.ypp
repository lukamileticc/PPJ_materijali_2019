%{

#include <iostream>
#include <cstdlib>
#include <map>
#include <string>
#include "polinom.hpp"
using namespace std;

void yyerror(string s){
	cerr << "Sintkasna greska: " << s << endl;
	exit(EXIT_FAILURE);
}
extern int yylex();

map<string,Polinom*> promenljive;

%}

%union {
	double x;
	string* ime;
	Polinom* p;
}

%nonassoc DOD EQ NEQ
%left '+' '-'
%left '*'
%right UMINUS
%left '\''

%start program
%token DOD EQ NEQ
%token <x> BROJ;
%token <ime> ID;
%type <p> izraz  polinom lista

%%

//gramatika
program: naredba '\n' program 
		| /*epsilon */  
		;

naredba: izraz  { $1->ispisi();}
		| ID DOD izraz { auto it = promenljive.find(*$1);
						 if(it != promenljive.end())
								delete it->second;
						
						promenljive[*$1] = $3;	
						delete $1;						
                       }
		| izraz EQ izraz { if (*$1 == *$3)
							cout << "True" << endl;
							else
							cout << "False" << endl;
							delete $1;
							delete $3;
						 }
		| izraz NEQ izraz { if (*$1 != *$3)
							cout << "True" << endl;
							else
							cout << "False" << endl;
							delete $1;
							delete $3;
						 }
		| izraz '[' BROJ ']' { cout << $1->vrednost($3) << endl; delete $1;}
		

izraz: izraz '+' izraz { $$ = *$1 + *$3;
						delete $1;
						delete $3;
						 }
	  | izraz '-' izraz { $$ = (*$1) - (*$3);
						delete $1;
						delete $3;
						 }
	  | izraz '*' izraz { $$ = (*$1) * (*$3);
						delete $1;
						delete $3;
						 }
	  | '-' izraz %prec UMINUS { $$ = -(*$2);
						delete $2;
						 }
	  | '(' izraz ')' { $$ = $2;}
	  | izraz '\'' { $$ = $1->izvod();
					 delete $1;}
	  | '$' izraz '|' BROJ  {$$ = $2->integral($4); delete $2;
		}
 	  | ID   { auto it = promenljive.find(*$1);
			if(it == promenljive.end())
			yyerror("Promeljive nije definisana");
			
			$$ = new Polinom(*(it->second));
			delete $1;
				
			 }
	  | polinom { $$ = $1;}
	  ;

polinom: '<' lista '>' {$$ = $2;}
		;
lista: lista ',' BROJ { $1->dodaj($3);
						$$ = $1;
						}
	 | BROJ  	{$$ = new Polinom();
				$$->dodaj($1);
				}
	 ;
%%

int main() {
	
	if(yyparse() == 0)
		cout << "Sve je okej" << endl;
	else
		cout << "SIntaksna greska" << endl;

	return 0;
}
