P = {3,2,2,-1};
Q = 7..10;
print P;
print Q;

A = {1,2} \/ {3,4};
B = {3,5,7} /\ {3,4,5,7};
print A \/ B;
print A /\ B;
print A \ B;

card {1,3,2,7,3,4} \/ {10};

check 5:A;
check 7:A \/ B;
check A < B;
check {5,7} < B;

UniversalSet = 1..10;
C = {1,3,5,7,9};
print ~C;

program -> program naredba ';'
		| naredba ';'
		;
naredba -> ID '=' E
		| PRINT_T E
		| CARD E
		;
E -> E UNIJA_T T
	| T
	;
T -> T RAZLIKA_T F
	| T PRESEK_T F
	| F
	;
F -> '(' E ')'
	| '~' F
	| skup
	| ID
	;
skup -> '{' lista '}'
	;
lista -> lista ',' BROJ
	| BROJ
	;
	
1. Eliminacija leve rekurzije
											Skupovi izbora
program -> naredba ';' programP					ID, PRINT, CARD
	;
programP -> naredba ';' programP				ID, PRINT, CARD			
	| eps										EOI
	;
naredba -> ID '=' E								ID
		| PRINT_T E								PRINT
		| CARD E								CARD
		;
E -> T EP										'(', '{', '~', ID					
	;
EP -> UNIJA_T T EP								UNIJA_T
	| eps										';', ')'
	;
T -> F TP										'(', '{', '~', ID
	;
TP -> PRESEK_T F TP								PRESEK_T
	| RAZLIKA_T F TP							RAZLIKA_T
	| eps										UNIJA_T, ';'
	;
F -> '(' E ')'									'('
	| '~' F										'~'
	| skup										'{'
	| ID										ID
	;
skup -> '{' lista '}'							'{'
	;
lista -> BROJ listaP							BROJ
	;
listaP -> ',' BROJ listaP						','
	| eps										'}'
	;

					First				Eps			Follow
program			ID, PRINT, CARD			/			EOI
programP		ID, PRINT, CARD			DA			EOI
naredba			ID, PRINT, CARD			/			';'
E 				'(', '{', '~', ID		/			';', ')'
EP				UNIJA_T					DA			';', ')'
T				'(', '{', '~', ID		/			UNIJA_T, ';'
TP				PRESEK_T, RAZLIKA_T		DA			UNIJA_T, ';'
F				'(', '{', '~', ID		/			PRESEK_T, RAZLIKA_T, UNIJA, ';'
skup			'{'						/			PRESEK_T, RAZLIKA_T, UNIJA, ';'
lista			BROJ					/			'}'
listaP			','						DA			'}'

